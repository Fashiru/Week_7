{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "986838f5-f621-4f39-bae4-b494f3e73ce1",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Getting Started with Numpy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "072600a5-7696-4538-9d9c-3ad3a6614796",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Array Basics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "cb8cf985-89a5-463c-ba64-84744f238737",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['apple', 'banana', 'cherry', 'date']"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "# Create a standard Python list\n",
    "fruits = [ 'apple', 'banana', 'cherry', 'date']\n",
    "fruits"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3110a1b8-8c8d-4c66-a0be-784f3f6255a6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['apple' 'banana' 'cherry' 'date']\n"
     ]
    }
   ],
   "source": [
    "# create a 1D array from the fruits list\n",
    "arr_1 = np.array(fruits)\n",
    "print(arr_1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "add46578-4d62-449e-a80b-902c00b544bb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<U6\n"
     ]
    }
   ],
   "source": [
    "# Check the data type of values in arr_1\n",
    "print(arr_1.dtype)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ceaafa0f-5108-4b1c-8141-f7effdb240f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "### Comment:\n",
    "The `dtype` is 'U5', where 'U' stands for Unicode (meaning the elements are string value) and the number '5' means the maximum length of the string in each each element is 5 characters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fcfe0d71-ca8b-48a6-90b9-9cbe992f3fc5",
   "metadata": {},
   "outputs": [],
   "source": [
    "### Create arr_4 with sliced element from arr_3\n",
    "arr_2 = np.array([[10, 11, 12], [13, 14, 15]])\n",
    "print (arr_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8627cf2e-ab51-4e7d-80b0-cfd9458f51a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "### comment:\n",
    "The transpose operation does not alter the value of `arr_2`. The original `arr_2` remains unchanged, and `.T` creates a new view with swapped dimensions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "89b78f81-d4fc-4452-81da-b0ff789d42cf",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Create another 2d_array\n",
    "arr_3 = np.array([[1,3,5], [2, 4, 6]])\n",
    "print(arr_3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d916cb9a-32f8-49d9-87ee-c0c07207cbae",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create arr_4 with sliced from arr-3\n",
    "arr_4 = arr_3[;,[0, 2]]\n",
    "arr_4[1, 1] = arr_3[1, 1]\n",
    "print(arr_4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "821cce25-d5f1-4871-95fa-ca6ede8d0718",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[[1. 1.]\n",
      "  [1. 1.]]\n",
      "\n",
      " [[1. 1.]\n",
      "  [1. 1.]]]\n"
     ]
    }
   ],
   "source": [
    "# Create a 3D array filled with ones\n",
    "arr_5 = np.ones((2, 2, 2))\n",
    "print(arr_5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dbe8c8a0-dc9e-47b3-8d3f-ff2c71eedbac",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "96aa6f0d-12d0-40f2-a69f-cc97c64ddfc9",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
